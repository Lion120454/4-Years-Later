(defun all (p x)
  (cond
    ((null x) t)                     ; Если список пустой, возвращаем true
    ((funcall p (car x))             ; Проверяем первый элемент списка
     (all p (cdr x)))                ; Рекурсивно проверяем оставшиеся элементы
    (t nil)))                        ; Если предикат не выполнен, возвращаем nil


(defun even-p (n)
  "Предикат для проверки, является ли число N четным.
   Возвращает T, если N четное, иначе NIL."
  (evenp n))                        ; Используем встроенную функцию evenp

(defun positive-p (n)
  "Предикат для проверки, является ли число N положительным.
   Возвращает T, если N положительное, иначе NIL."
  (> n 0))

(defun diapozon-p (n)
  (and (> n 10) (< n 20)))

(defun diapozoоn-p (n)
  (or (> n 30) (< n 15)))

;; Примеры использования:
(format t "Все элементы четные? ~A~%" (all 'even-p '(2 4 6))) ; Вернет T
(format t "Все элементы четные? ~A~%" (all 'even-p '(2 3 6))) ; Вернет NIL

(format t "Все элементы положительные? ~A~%" (all 'positive-p '(1 2 3))) ; Вернет T
(format t "Все элементы положительные? ~A~%" (all 'positive-p '(-1 2 3))) ; Вернет NIL

(format t "Все элементы в диопозоне? ~A~%" (all 'diapozon-p '(12 14 16))) ; Вернет T
(format t "Все элементы в диопозоне? ~A~%" (all 'diapozon-p '(12 3 16))) ; Вернет NIL